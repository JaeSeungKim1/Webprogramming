--JOIN
--CARTESIAN PRODUCT 카티션 곰, 상호조인 1개1개에 다 매칭을 시켜주는 것
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT +
SELECT * FROM EMP A
CROSS JOIN DEPT

--INNER JOIN
SELECT E.EMPNO,E.ENAME,E.JOB,E.DNAME
FROM EMP E
INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE E.JOB='CLERK;

SELECT E.EMPNO,E.ENAME,E.JOB,D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND E.JOB = 'CLERK';
--FULL OUTER JOIN
SELECT E.*,D.*
FROM EMP E
FULL OUTER JOIN DEPT D
    ON E.DEPTNO = D.DEPTNO;
--SELF JOIN
SELECT A.EMPNO,A.ENAME,A.JOB,A.MGR
    ,D.DEPTNO,D.DNAME
    ,B.EMPNO,B.ENAME,B.JOB
FROM EMP A, EMP B, DEPT d
WHERE A. DEPTNO=D.DEPTNO    --INNER JOIN을 사용해서 해당하는 관리자가 같이 연결이 되게 짜주는 형식
AND A.MGR=B.EMPNO(+);

/*SUB QUERY 서브쿼리
    SELECT / FROM / WHERE
*/
-- SELECT 결과가 반드시 단일 행 단일 값
SELECT E.ENAME
    ,(SELECT D.DNAME FROM DEPT D WHERE D.DEPTNO=E.DEPTNO) 
    AS DEPTNAME
FROM EMP E
WHERE E.JOB = 'MANAGER';

--FROM INLINE VIEW 결과 반드시 하나의 테이블로 리턴
SELECT EMP_NAME,SALARY
FROM(SELECT E.ENAME AS EMP_NAME
    ,E.SAL AS SALARY
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    AND D.DNAME='SALES';
)
WHERE SALARY BETWEEN 1000 AND 2000;

--WHERE 행과 무관하게 단일 컬럼으로 리턴
SELECT *FROM DEPT D
WHERE D.DEPTNO IN(SELECT E.DEPTNO FROM EMP E WHERE E.SAL>2000);

SELECT ENAME,SAL FROM EMP
WHERE SAL>(SELECT AVG(SAL) FROM EMP);

SELECT ENAME,SAL FROM EMP
WHERE SAL>ALL(SELECT SAL FROM EMP WHERE DEPTNO=30); --모든 것을 만족하는 값

SELECT ENAME,SAL FROM EMP
WHERE SAL>ANY(SELECT SAL FROM EMP WHERE DEPTNO=30);  --그중 하나라도 만족하는 값 출력

SELECT D.DNAME
FROM DEPT D
WHERE EXISTS(SELECT E.ENAME     --잇는지 없는지 존재 여부 체크(EXISTS)
-- WHERE NOT EXISTS(SELECT E.ENAME   없는 부서에 대해서 출력
            FROM EMP E
            WHERE E.DEPTNO=D.DEPTNO
            AND E.SAL>3000);

--Q1 부서명 부서이름 사원번호 사원명 봉금
-- 사원의 봉급이 2000초과인 사원만 
SELECT E.DEPTNO, D.DNAME, E.EMPNO,E.ENAME,E.SAL
FROM EMP E
INNER JOIN DEPT D ON E. DEPTNO=D.DEPTNO
WHERE E.SAL>2000
--Q2 부서별
--부서코드 부서명 급여평균 최대급여 최서급여 부서인원수
SELECT 



